{"version":3,"sources":["components/Todo.js","components/TodoForm.js","components/TodoList.js","App.js","index.js"],"names":["Todo","todos","completeTodo","removeTodo","updateTodo","useState","id","value","edit","setEdit","onSubmit","map","todo","index","className","isComplete","key","onClick","text","TodoForm","props","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","event","target","preventDefault","Math","floor","random","type","placeholder","name","onChange","ref","TodoList","setTodos","test","newTodos","updateTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAkDeA,MA3Cf,YAA8D,IAA/CC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,WAAa,EACpCC,mBAAS,CAChCC,GAAI,KACJC,MAAO,KAHoD,mBACrDC,EADqD,KAC/CC,EAD+C,KAc5D,OAAGD,EAAKF,GACA,kBAAC,EAAD,CAAUE,KAAMA,EAAME,SATT,SAAAH,GACpBH,EAAWI,EAAKF,GAAIC,GACpBE,EAAQ,CACPH,GAAI,KACJC,MAAO,QAQFN,EAAMU,KAAK,SAACC,EAAMC,GAAP,OACjB,yBACAC,UAAWF,EAAKG,WAAa,oBAAsB,WACnDC,IAAKH,GAEJ,yBACAG,IAAKJ,EAAKN,GACVW,QAAS,kBAAMf,EAAaU,EAAKN,MAE/BM,EAAKM,MAEP,yBAAKJ,UAAU,SACd,kBAAC,IAAD,CACAG,QAAS,kBAAMd,EAAWS,EAAKN,KAC/BQ,UAAU,gBAEV,kBAAC,IAAD,CACAG,QAAS,kBAAMR,EAAQ,CAACH,GAAIM,EAAKN,GAAIC,MAAOK,EAAKM,QACjDJ,UAAU,oBCkBCK,MAzDf,SAAkBC,GAAQ,IAAD,EACEf,mBAASe,EAAMZ,KAAOY,EAAMZ,KAAKD,MAAQ,IAD3C,mBACjBc,EADiB,KACVC,EADU,KAGlBC,EAAWC,iBAAO,MAExBC,qBAAU,WACTF,EAASG,QAAQC,WAGlB,IAAMC,EAAe,SAAAC,GACpBP,EAASO,EAAMC,OAAOvB,QAcvB,OACC,0BAAMO,UAAU,YAAYJ,SAZR,SAAAmB,GACpBA,EAAME,iBACNX,EAAMV,SAAS,CACdJ,GAAI0B,KAAKC,MAAoB,IAAdD,KAAKE,UACpBhB,KAAMG,IAGPC,EAAS,MAMRF,EAAMZ,KACN,6BACA,2BACC2B,KAAK,OACLC,YAAY,cACZ7B,MAAOc,EACPgB,KAAK,OACLvB,UAAU,kBACVwB,SAAUV,EACVW,IAAKhB,IAEN,4BAAQT,UAAU,oBAAlB,WAGA,6BACA,2BACCqB,KAAK,OACLC,YAAY,YACZ7B,MAAOc,EACPgB,KAAK,OACLvB,UAAU,cACVwB,SAAUV,EACVW,IAAKhB,IAEN,4BAAQT,UAAU,eAAlB,eCGY0B,MAnDf,WAAqB,IAAD,EACOnC,mBAAS,IADhB,mBACZJ,EADY,KACLwC,EADK,KAqCnB,OACC,6BACC,qDACA,kBAAC,EAAD,CAAU/B,SArCI,SAAAE,GACf,GAAIA,EAAKM,OAAQ,QAAQwB,KAAK9B,EAAKM,MAAnC,CAGA,IAAMyB,EAAQ,CAAI/B,GAAJ,mBAAaX,IAC3BwC,EAASE,OAiCR,kBAAC,EAAD,CACA1C,MAAOA,EACPC,aAhBmB,SAAAI,GACpB,IAAIsC,EAAc3C,EAAMU,KAAI,SAAAC,GAI3B,OAHIA,EAAKN,KAAOA,IACfM,EAAKG,YAAcH,EAAKG,YAElBH,KAER6B,EAASG,IAURzC,WAzBiB,SAAAG,GAClB,IAAMuC,EAAY,YAAI5C,GAAO6C,QAAO,SAAAlC,GAAI,OAAIA,EAAKN,KAAOA,KACxDmC,EAASI,IAwBRzC,WAjCiB,SAAC2C,EAAQC,GACvBA,EAAS9B,OAAQ,QAAQwB,KAAKM,EAAS9B,OAG3CuB,GAAS,SAAAQ,GAAI,OAAIA,EAAKtC,KAAI,SAAAuC,GAAI,OAAKA,EAAK5C,KAAOyC,EAASC,EAAWE,aCTtDC,MARf,WACE,OACE,yBAAKrC,UAAU,YACb,kBAAC,EAAD,QCHNsC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.11ae48ed.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport TodoForm from './TodoForm';\r\n\r\nimport {RiCloseCircleLine} from 'react-icons/ri';\r\nimport {TiEdit} from 'react-icons/ti';\r\n\r\n\r\nfunction Todo({todos, completeTodo, removeTodo, updateTodo}) {\r\n\tconst [edit, setEdit] = useState({\r\n\t\tid: null,\r\n\t\tvalue: ''\r\n\t})\r\n\r\n\tconst submitUpdate = value => {\r\n\t\tupdateTodo(edit.id, value)\r\n\t\tsetEdit({\r\n\t\t\tid: null,\r\n\t\t\tvalue: ''\r\n\t\t})\r\n\t}\r\n\r\n\tif(edit.id){\r\n\t\treturn <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n\t}\r\n\r\n\treturn todos.map( (todo, index) => (\r\n\t\t<div \r\n\t\tclassName={todo.isComplete ? 'todo-row complete' : 'todo-row'} \r\n\t\tkey={index} \r\n\t\t>\r\n\t\t\t<div \r\n\t\t\tkey={todo.id} \r\n\t\t\tonClick={() => completeTodo(todo.id)}\r\n\t\t\t>\r\n\t\t\t\t{todo.text}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"icons\">\r\n\t\t\t\t<RiCloseCircleLine \r\n\t\t\t\tonClick={() => removeTodo(todo.id)}\r\n\t\t\t\tclassName='delete-icon'\r\n\t\t\t\t/>\r\n\t\t\t\t<TiEdit \r\n\t\t\t\tonClick={() => setEdit({id: todo.id, value: todo.text})}\r\n\t\t\t\tclassName='edit-icon'\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t))\r\n}\r\n\r\nexport default Todo;","import React, {useState, useEffect, useRef} from 'react';\r\nimport Todo from './Todo';\r\n\r\n\r\nfunction TodoForm(props) {\r\n\tconst [input, setInput] = useState(props.edit ? props.edit.value : '' );\r\n\r\n\tconst inputRef = useRef(null)\r\n\r\n\tuseEffect(() => {\r\n\t\tinputRef.current.focus()\r\n\t})\r\n\r\n\tconst handleChange = event => {\r\n\t\tsetInput(event.target.value);\r\n\t}\r\n\r\n\tconst handleSubmit = event => {\r\n\t\tevent.preventDefault();\r\n\t\tprops.onSubmit({\r\n\t\t\tid: Math.floor(Math.random()*10000),\r\n\t\t\ttext: input\r\n\t\t});\r\n\r\n\t\tsetInput(\"\");\r\n\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form className=\"todo-form\" onSubmit={handleSubmit}\t>\r\n\t\t{props.edit ? (\r\n\t\t\t<div>\r\n\t\t\t<input \r\n\t\t\t\ttype=\"text\" \r\n\t\t\t\tplaceholder=\"Update item\"\r\n\t\t\t\tvalue={input}\r\n\t\t\t\tname=\"text\"\r\n\t\t\t\tclassName=\"todo-input edit\"\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tref={inputRef}\r\n\t\t\t/>\r\n\t\t\t<button className=\"todo-button edit\">Update</button>\r\n\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t<div>\r\n\t\t\t<input \r\n\t\t\t\ttype=\"text\" \r\n\t\t\t\tplaceholder=\"Add to do\"\r\n\t\t\t\tvalue={input}\r\n\t\t\t\tname=\"text\"\r\n\t\t\t\tclassName=\"todo-input \"\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tref={inputRef}\r\n\t\t\t/>\r\n\t\t\t<button className=\"todo-button\">Add todo</button>\r\n\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default TodoForm;","import React, {useState} from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport Todo from './Todo';\r\n\r\n\r\n\r\nfunction TodoList() {\r\n\tconst [todos, setTodos] = useState([]);\r\n\r\n\tconst addTodo = todo => {\r\n\t\tif(!todo.text || /^\\s*$/.test(todo.text)){\r\n\t\t\treturn \r\n\t\t}\r\n\t\tconst newTodos = [todo, ...todos]\r\n\t\tsetTodos(newTodos);\r\n\t\t//console.log(todo, ...todos);\r\n\t};\r\n\r\n\tconst updateTodo = (todoId, newValue) => {\r\n\t\tif(!newValue.text || /^\\s*$/.test(newValue.text)){\r\n\t\t\treturn \r\n\t\t}\r\n\t\tsetTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)))\r\n\t}\r\n\r\n\tconst removeTodo = id => {\r\n\t\tconst removeArr = [...todos].filter(todo => todo.id !== id)\r\n\t\tsetTodos(removeArr);\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst completeTodo = id => {\r\n\t\tlet updateTodos = todos.map(todo => {\r\n\t\t\tif (todo.id === id){\r\n\t\t\t\ttodo.isComplete = !todo.isComplete \r\n\t\t\t}\r\n\t\t\treturn todo\r\n\t\t})\r\n\t\tsetTodos(updateTodos)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Whats Plan for Today?</h1>\r\n\t\t\t<TodoForm onSubmit={addTodo}/>\r\n\t\t\t<Todo \r\n\t\t\ttodos={todos}\r\n\t\t\tcompleteTodo={completeTodo}\r\n\t\t\tremoveTodo={removeTodo}\r\n\t\t\tupdateTodo={updateTodo}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\n\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}